@model IEnumerable<ProjectForHealing.Models.Resource>


@{
    ViewData["Title"] = "Welcome";
}
    <div class="container middlebody">
        <div id="mapDiv" class="container" style="display: inline-block; height: 30%; width: 35%;"></div>

        <div class="jumbotron">
            <h1 class="display-3">Project For Healing, Inc.</h1>
            <p class="lead">
                Project for Healing, Inc offers counseling services in four locations, psychoeducation classes, behavioral case management,
                psychiatric support services, medication management and group treatment.
                Two licensed social workers, specially trained in refugee mental health care, provide over 500 sessions annually
            </p>
            <p class="lead">Our aim is for all North Florida refugees to have healthy, happy lives..</p>
            <hr class="my-4">
            <p>Project For Healing has collaborations between many refugee resettlement agencies, you can look at the map or click the resource tab to find the right one for you.</p>
            <p class="lead">
                <a class="btn btn-primary btn-lg" href="#" role="button">Submit Resource</a>
                <a class="btn btn-primary btn-lg" href="https://projectforhealing.org/about/" role="button">Learn more about PFH</a>
               
            </p>
        </div>
        <div class="container mt-2" id='map' style="height: 550px;"></div>
        <div id="legend"><h3>Legend</h3></div>
        <div class="container" id="categories" style="padding-top:15px">
            <div class="row" id="cats"></div>
        </div>
 

        @section Scripts    {
                <script type="text/javascript">
                var markers = [];
                var map, infoWindow;
                function toggleMarker(element, type) {
                    var on = element.checked;
                    for (var i = 0; i < markers.length; i++) {
                        if (markers[i].type == type) {
                            markers[i].marker.setMap(on ? map : null);
                        }
                    }
                }



              function initMap() {

                    $(document).ready(function () {
                        map = new google.maps.Map(document.getElementById('map'), {
                            center: { lat: -34.397, lng: 150.644 },
                            zoom: 13
                        });
                        infoWindow = new google.maps.InfoWindow;
                        // Try HTML5 geolocation.
                        if (!navigator.geolocation) {
                            handleLocationError(false, infoWindow, map.getCenter());
                            return;
                        }
                        navigator.geolocation.getCurrentPosition(function (position) {
                            var pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                            };
                            infoWindow.setPosition(pos);
                            infoWindow.setContent('Location found.');
                            infoWindow.open(map);
                            map.setCenter(pos);
                        }, function () {
                            handleLocationError(true, infoWindow, map.getCenter());
                        });
                        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                            infoWindow.setPosition(pos);
                            infoWindow.setContent(browserHasGeolocation ?
                                'Error: The Geolocation service failed.' :
                                'Error: Your browser doesn\'t support geolocation.');
                            infoWindow.open(map);
                        }



                        var icons = {
                            housing: {
                                name: 'Housing',
                                icon: 'fas fa-home',
                                text: '\uf015',
                                color: 'SlateGrey'

                            },
                            esol: {
                                name: 'ESOL',
                                icon: 'fas fa-language',
                                text: '\uf1ab',
                                color: 'orange'
                            },
                            volunteering: {
                                name: 'Volunteering',
                                icon: 'fas fa-people-carry',
                                text: '\uf4ce',
                                color: 'Plum'
                            },
                            disablility: {
                                name: 'Disablility Services',
                                icon: 'fab fa-accessible-icon',
                                text: '\uf368',
                                color: 'blue'
                            },
                            pfh: {
                                name: 'PFH',
                                icon: 'fab fa-hire-a-helper',
                                text: '\uf3b0',
                                color: 'Tomato'
                            },
                            children: {
                                name: 'Children',
                                icon: 'fas fa-baby-carriage',
                                text: '\uf77d',
                                color: 'Turquoise'
                            },
                            employment: {
                                name: 'Employment',
                                icon: 'fab fa-wordpress-simple',
                                text: '\uf411',
                                color: 'green'
                            },
                            medical: {
                                name: 'Medical',
                                icon: 'fas fa-ambulance',
                                text: '\uf0f9',
                                color: 'red'
                            },
                            dental: {
                                name: 'Dental Health',
                                icon: 'fas fa-tooth',
                                text: '\uf5c9',
                                color: 'MediumSpringGreen'
                            },
                            mental: {
                                name: 'Mental Health',
                                icon: 'fas fa-brain',
                                text: '\uf5dc',
                                color: 'SkyBlue'
                            }
                        };




                        function addMarker(feature) {
                         // var ID =  parseInt(item.ResourceID);
                            var ID = feature.link;

                            var links = "<a href=\"/Home/ViewSource/"+ Number(ID) +"\">Edit</a>";
                            var infoWindow = new google.maps.InfoWindow({
                                content: 'Name: ' + feature.name + ' <br> Address: ' + feature.address + ' <br><p>Link:  '+ links + '</p>'
                            });

                            var icon = {
                                path: "M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z", //SVG path of awesomefont marker
                                fillColor: icons[feature.type].color, //color of the marker
                                fillOpacity: 1,
                                strokeWeight: 0,
                                scale: 0.09, //size of the marker, careful! this scale also affects anchor and labelOrigin
                                anchor: new google.maps.Point(200, 510), //position of the icon, careful! this is affected by scale
                                labelOrigin: new google.maps.Point(205, 190) //position of the label, careful! this is affected by scale
                            }

                            var marker = new google.maps.Marker({
                                position: feature.position,
                                map: map,
                                icon: icon,
                                label: {
                                    fontFamily: "'Fontawesome'",
                                    text: icons[feature.type].text, //icon code
                                    fontWeight: '900', //careful! some icons in FA5 only exist for specific font weights
                                    color: '#FFFFFF', //color of the text inside marker
                                },

                            });
                            marker.addListener('click', function () {
                                infoWindow.open(map, marker);
                            });
                            markers.push({
                                marker: marker,
                                type: feature.type
                            });
                        }


                        var features = [/*
                            {
                                position: new google.maps.LatLng(30.332630, -81.664250),
                                type: 'housing'
                            }, {
                                position: new google.maps.LatLng(30.328930, -81.655520),
                                type: 'esol'
                            }, {
                                position: new google.maps.LatLng(30.352270, -81.652700),
                                type: 'volunteering'
                            }, {
                                position: new google.maps.LatLng(30.260620, -81.623280),
                                type: 'pfh'
                            }, {
                                position: new google.maps.LatLng(30.282250, -81.601870),
                                type: 'children'
                            }*/
                        ];
                        /************************
                         *
                         * Serialization
                         *
                         *
                         * */
                       // Stores entire list of Resource Models into Javascript array
                         var stringArray = @Html.Raw(Json.Serialize(Model));
                        console.log(stringArray);
                        //Foreach "item" inside "stirngArray"
                        //The features array pushes a new google postion with the
                        // "stringArray" items lat and lng
                        //type is pushed as well but is static for now
                        stringArray.forEach(function (item) {
                          //  var category = item.RType1.toString();
                            features.push({
                                name: item.orgName,
                                address: item.orgAddress,
                                link: item.resourceID,
                                position: new google.maps.LatLng(item.lat, item.lng),
                                type: item.rType1
                            })
                               })

                        for (var i = 0, feature; feature = features[i]; i++) {
                            addMarker(feature);
                            console.log(feature);
                        }
                        var legend = document.getElementById('legend');
                        var categories = document.getElementById('cats');
                        var i = 0;
                        for (var key in icons) {
                            var type = icons[key];
                            var name = type.name;
                            var icon = type.icon;
                            var div = document.createElement('div');
                            var cdiv = document.createElement('div');
                            div.innerHTML = '<i class=" ' + icon + ' fa-lg"></i>' + "  " + name;
                            cdiv.innerHTML = '<i class=" ' + icon + ' fa-4x" style="color:' + type.color + ';"></i><br><h4>' + name + '</h4>';
                            cdiv.className = "col-sm text-center";
                            legend.appendChild(div);
                            categories.appendChild(cdiv);
                        }
                        map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(legend);
                    });
                }
                </script>

            <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHRMZHAXLXAuowcxyVA_fHwxRDqaqjX8k&callback=initMap"></script>

        }

    </div>